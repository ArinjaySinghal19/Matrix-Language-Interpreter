Program AST:
Program:
  If(BinaryOp(Fne, Var(det), Float(0.000000)),
Assign(a, Var(E)),
Assign(cofactor_matrix, MatrixFloat(4, 4, [[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]])),
    For(Assign(i, Int(0)), BinaryOp(Ilt, Var(i), UnaryOp(FloatMatDimRow, Var(a))), Assign(i, BinaryOp(Iadd, Var(i), Int(1))),
      For(Assign(j, Int(0)), BinaryOp(Ilt, Var(j), UnaryOp(FloatMatDimCol, Var(a))), Assign(j, BinaryOp(Iadd, Var(j), Int(1))),
Assign(minor, TernaryOp(FloatMatMinor, Var(a), Var(i), Var(j))),
IndexAssign(MatIndex(Var(cofactor_matrix), Var(i), Var(j)), BinaryOp(Fmul, BinaryOp(Fpow, UnaryOp(IntToFloat, Int(-1)), UnaryOp(IntToFloat, BinaryOp(Iadd, Var(i), Var(j)))), UnaryOp(FloatMatDet, Var(minor)))))),
Assign(adjoint_matrix, UnaryOp(FloatMatTrans, Var(cofactor_matrix))),
Assign(mul_fact, BinaryOp(Fdiv, UnaryOp(IntToFloat, Int(1)), UnaryOp(FloatMatDet, Var(a)))),
Assign(inverse_matrix, MatrixFloat(4, 4, [[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]])),
    For(Assign(i, Int(0)), BinaryOp(Ilt, Var(i), UnaryOp(FloatMatDimRow, Var(a))), Assign(i, BinaryOp(Iadd, Var(i), Int(1))),
      For(Assign(j, Int(0)), BinaryOp(Ilt, Var(j), UnaryOp(FloatMatDimCol, Var(a))), Assign(j, BinaryOp(Iadd, Var(j), Int(1))),
IndexAssign(MatIndex(Var(inverse_matrix), Var(i), Var(j)), BinaryOp(Fmul, Var(mul_fact), MatIndex(Var(adjoint_matrix), Var(i), Var(j)))))),
Assign(x, BinaryOp(FloatMatVecMul, Var(u), Var(inverse_matrix))),
Output(x)
Output("MatrixNotInvertible")),
Output(det),
Assign(det, UnaryOp(FloatMatDet, Var(E))),
Output(E),
Assign(E, BinaryOp(FloatMatMul, Var(C), Var(D))),
Output(C),
Assign(C, BinaryOp(FloatMatAdd, Var(A), Var(B))),
Assign(u, File_inp(t2_u.txt)),
Assign(D, File_inp(t2_D.txt)),
Assign(B, File_inp(t2_B.txt)),
Assign(A, File_inp(t2_A.txt)),
Assign(u, VectorFloat(4, [0., 0., 0., 0.])),
Assign(D, MatrixFloat(5, 4, [[0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.], [0., 0., 0., 0.]])),
Assign(B, MatrixFloat(4, 5, [[0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.]])),
Assign(A, MatrixFloat(4, 5, [[0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.]]))
